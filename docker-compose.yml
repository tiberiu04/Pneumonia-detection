version: '3.8'

services:
  # Main application service
  pneumonia-ai:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        MODEL_VERSION: "1.0"
        BUILD_DATE: ${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        VCS_REF: ${VCS_REF:-$(git rev-parse --short HEAD)}
    image: pneumonia-ai:latest
    container_name: pneumonia-ai-app
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=docker
      - SECRET_KEY=${SECRET_KEY:-change-this-in-production}
      - MODEL_PATH=/app/models/pneumonia_cnn_model.h5
      - UPLOAD_FOLDER=/app/uploads
      - LOG_FOLDER=/app/logs
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./pneumonia_cnn_model.h5:/app/models/pneumonia_cnn_model.h5:ro
    networks:
      - pneumonia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.pneumonia-ai.service=web"
      - "com.pneumonia-ai.version=1.0"

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: pneumonia-ai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - pneumonia-ai
    networks:
      - pneumonia-network
    restart: unless-stopped
    profiles:
      - production

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: pneumonia-ai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - pneumonia-network
    restart: unless-stopped
    profiles:
      - production
    command: redis-server --appendonly yes

  # PostgreSQL database (optional)
  postgres:
    image: postgres:15-alpine
    container_name: pneumonia-ai-db
    environment:
      - POSTGRES_DB=pneumonia_ai
      - POSTGRES_USER=pneumonia_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secure_password}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - pneumonia-network
    restart: unless-stopped
    profiles:
      - production

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: pneumonia-ai-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - pneumonia-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana for dashboards (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: pneumonia-ai-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - pneumonia-network
    restart: unless-stopped
    profiles:
      - monitoring

networks:
  pneumonia-network:
    driver: bridge
    labels:
      - "com.pneumonia-ai.network=main"

volumes:
  redis-data:
    driver: local
  postgres-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local